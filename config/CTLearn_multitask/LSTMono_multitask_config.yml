Logging:
    model_directory: '/home/tjark/deeplearning/test/'
Data:
    #file_list: '/home/tjark/deeplearning/ctlearn_test.txt'
    file_list: '/home/tjark/deeplearning/LST_mono_training_balanced.txt'
    mode: 'mono'
    selected_telescope_type: 'LST_LSTCam'
    shuffle: true
    seed: 1111
    image_channels: ['charge']
    mapping_settings:
        camera_types: ['LSTCam']
        mapping_method:
            'LSTCam': 'bilinear_interpolation'
        padding:
            'LSTCam': 2
            'FlashCam': 1
            'NectarCam': 2
            'SCTCam': 4
            'DigiCam': 1
            'ASTRICam': 0
            'CHEC': 0
            'VERITAS': 1
        mask_interpolation: false
    #image_selection:
         #image_intensity_filter_after_cleaning(reader, images, i_min=-np.inf, i_max=np.inf, **opts)
         #-
         #   name: 'image_intensity_filter_after_cleaning'
         #   args: {i_min: 3884.0,picture_thresh: 6, boundary_thresh: 3, keep_isolated_pixels: False, min_number_picture_neighbors: 2}
#        -
#            name: 'leakage_filter'
#            args: {leakage_value: 0.2, leakage_number: 2, picture_thresh: 6, boundary_thresh: 3, keep_isolated_pixels: False, min_number_picture_neighbors: 2}
    event_info:
        - 'shower_primary_id'
#        - 'mc_energy'
#        - 'alt'
#        - 'az'
#        - 'core_x'
#        - 'core_y'
#        - 'x_max'
    transforms:
        - name: 'ShowerPrimaryIDToParticleType'
#        - name: 'MCEnergyToEnergyInLog'
#        - name: 'AltAzToDirection'
#        - name: 'CoreXYToImpactInKm'
#        - name: 'XmaxToShowerMaximumInKm'
Input:
    seed: 1234
    batch_size: 64
    shuffle_buffer_size: 10000
    prefetch_buffer_size: 2
Model:
#    model_file: /home/tjark/deeplearning/ctlearn_test_test_test/ctlearn_model.h5
    model_directory: '/home/tjark/deeplearning/ctlearn/ctlearn/default_models/'
    model: {module: 'single_tel', function: 'single_tel_model'}
    task:
        particletype: {class_names: ['proton', 'gamma'], fc_head: [2], loss: 'binary_crossentropy', weight: 1.0}
#        energy: {fc_head: [1], loss: 'mse', weight: 1.0, metric: 'mse'}
#        direction: {fc_head: [2], loss: 'mse', weight: 1.0, metric: 'mse'}
#        impact: {fc_head: [2], loss: 'mse', weight: 1.0, metric: 'mse'}
#        showermaximum: {fc_head: [1], loss: 'mse', weight: 1.0, metric: 'mse'}
Model Parameters:
    single_tel:
        cnn_block: {module: 'basic', function: 'conv_block'}
        pretrained_weights: null
        mode: 'hard'
    cnn_rnn:
        cnn_block: {module: 'basic', function: 'conv_block'}
        pretrained_weights: null
        dropout_rate: 0.5
    gammaPhysNet:
        cnn_block: {module: 'basic', function: 'conv_block'}
        pretrained_weights: null
    gammaPhysNet2:
        cnn_block: {module: 'basic', function: 'conv_block'}
        pretrained_weights: null
    variable_input_model:
        cnn_block: {module: 'basic', function: 'conv_block'}
        telescope_combination: 'feature_maps'
        network_head: {module: 'basic', function: 'conv_head'}
        pretrained_weights: null
    basic:
        conv_block:
            layers:
                - {filters: 32, kernel_size: 3}
                - {filters: 32, kernel_size: 3}
                - {filters: 64, kernel_size: 3}
                - {filters: 128, kernel_size: 3}
            max_pool: {size: 2, strides: 2}
            bottleneck: null
            batchnorm: false
        fc_head:
            layers: [1024, 512, 256, 128, 64]
            batchnorm: false
        conv_head:
            layers:
                - {filters: 64, kernel_size: 3}
                - {filters: 128, kernel_size: 3}
                - {filters: 256, kernel_size: 3}
            final_avg_pool: true
            batchnorm: false
        batchnorm_decay: 0.99
Training:
    validation_split: 0.1
    num_validations: 15
    num_training_steps_per_validation: 2500
    optimizer: 'Adam'
    adam_epsilon: 1.0e-8
    base_learning_rate: 5.0e-04
    scale_learning_rate: false
    apply_class_weights: false
    variables_to_train: null
Evaluation:
    default_tensorflow: true
    custom_ctlearn:
        final_evaluation: true
        final_evaluation_file_name: 'experiment'
Prediction:
    prediction_file_list: '/home/tjark/prototype_files_class_balanced_test_dummy.txt'
    save_labels: true
    save_identifiers: true
    prediction_file_name: 'ctlearn_prediction'
TensorFlow:
    run_TFDBG: false
